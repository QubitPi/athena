"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[51],{3340:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>c});var t=i(4848),s=i(8453);const a={title:"Glossary",sidebar_position:11},o=void 0,r={id:"glossary",title:"Glossary",description:"[//]: # (Copyright Jiaqi Liu)",source:"@site/docs/glossary.md",sourceDirName:".",slug:"/glossary",permalink:"/athena/docs/glossary",draft:!1,unlisted:!1,editUrl:"https://github.com/QubitPi/athena/tree/master/docs/docs/glossary.md",tags:[],version:"current",sidebarPosition:11,frontMatter:{title:"Glossary",sidebar_position:11},sidebar:"docSidebar",previous:{title:"Troubleshooting",permalink:"/athena/docs/troubleshooting"},next:{title:"Client APIs",permalink:"/athena/docs/client-apis"}},l={},c=[{value:"Application Concerns",id:"application-concerns",level:2},{value:"Health Check",id:"health-check",level:3},{value:"Feature Flag",id:"feature-flag",level:3},{value:"System Config",id:"system-config",level:3},{value:"Request Log",id:"request-log",level:3},{value:"File Store",id:"file-store",level:3},{value:"Miscellaneous",id:"miscellaneous",level:2},{value:"Spock",id:"spock",level:3},{value:"Groovy",id:"groovy",level:3},{value:"Servlet",id:"servlet",level:3},{value:"Meta Data",id:"meta-data",level:3},{value:"Web Service",id:"web-service",level:3}];function d(e){const n={a:"a",em:"em",h2:"h2",h3:"h3",p:"p",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"This is collection of terms related to Athena and its concepts."}),"\n",(0,t.jsx)(n.h2,{id:"application-concerns",children:"Application Concerns"}),"\n",(0,t.jsx)(n.h3,{id:"health-check",children:"Health Check"}),"\n",(0,t.jsx)(n.p,{children:"A Health Check is a mechanism to programatically assert if the web service is healthy or not in a binary yes/no\nfashion."}),"\n",(0,t.jsx)(n.h3,{id:"feature-flag",children:"Feature Flag"}),"\n",(0,t.jsx)(n.p,{children:"A Feature Flag is a boolean configuration mechanism that can be used to turn certain capabilities on or off via a\nsimple flag-like setting."}),"\n",(0,t.jsx)(n.h3,{id:"system-config",children:"System Config"}),"\n",(0,t.jsx)(n.p,{children:"System Config is a layered configuration infrastructure that makes it easy to handle configuration within the code, as\nwell as easy to specify configuration in different environments."}),"\n",(0,t.jsx)(n.h3,{id:"request-log",children:"Request Log"}),"\n",(0,t.jsx)(n.p,{children:"The Request Log is an extensible log line that Athena emits after a request has been handled and responded to. The data\nin this log line is built up as the request is processed and it includes information about nearly every phase of\nprocessing a request, including how long things took at both fine-grained and aggregate levels."}),"\n",(0,t.jsx)(n.h3,{id:"file-store",children:"File Store"}),"\n",(0,t.jsx)(n.p,{children:"A File Store is the generic name for the source of the users' files, like OpenStack Swift and Hadoop Distributed File\nSystem (HDFS)"}),"\n",(0,t.jsx)(n.h2,{id:"miscellaneous",children:"Miscellaneous"}),"\n",(0,t.jsx)(n.h3,{id:"spock",children:"Spock"}),"\n",(0,t.jsx)(n.p,{children:"Spock is a Groovy-based BDD-style testing framework."}),"\n",(0,t.jsx)(n.h3,{id:"groovy",children:"Groovy"}),"\n",(0,t.jsx)(n.p,{children:"Groovy is a dynamic JVM-based programming language. It's dynamic and flexible nature make it particularly good for\nuses like testing."}),"\n",(0,t.jsx)(n.h3,{id:"servlet",children:"Servlet"}),"\n",(0,t.jsx)(n.p,{children:"A Servlet is a Java construct that usually is designed to handle an HTTP request. For Athena, we also have a Servlet\nconstruct, and while it's similar to the Java construct, it's more akin to a Controller in other MVC web frameworks\nlike Ruby on Rails or Grails."}),"\n",(0,t.jsx)(n.h3,{id:"meta-data",children:"Meta Data"}),"\n",(0,t.jsx)(n.p,{children:"A Meta Data is some piece of combined information that describes a general file, such as file name and file type."}),"\n",(0,t.jsx)(n.h3,{id:"web-service",children:"Web Service"}),"\n",(0,t.jsxs)(n.p,{children:["A software system, usually located at the server side in a client-server organization on the web, acting as middleware\nor interface between a client and a database server. In a more general definition,\n",(0,t.jsx)(n.a,{href:"https://www.w3.org/TR/2004/NOTE-ws-gloss-20040211/#webservice",children:"W3C"})," defines web service as ",(0,t.jsx)(n.em,{children:"a software system designed\nto support interoperable machine-to-machine interaction over a network"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["See also ",(0,t.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Web_service",children:"web service"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>r});var t=i(6540);const s={},a=t.createContext(s);function o(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);