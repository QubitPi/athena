"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[299],{4511:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>d});var s=n(4848),a=n(8453);const r={title:"Testing",sidebar_position:2},o=void 0,i={id:"contributing/test",title:"Testing",description:"[//]: # (Copyright 2024 Jiaqi Liu)",source:"@site/docs/contributing/test.md",sourceDirName:"contributing",slug:"/contributing/test",permalink:"/docs/contributing/test",draft:!1,unlisted:!1,editUrl:"https://github.com/QubitPi/athena/tree/master/docs/docs/contributing/test.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Testing",sidebar_position:2},sidebar:"docSidebar",previous:{title:"Basic Dependency Injection using Jersey's HK2",permalink:"/docs/contributing/jersey-di-using-hk2"},next:{title:"FAQ",permalink:"/docs/faq"}},c={},d=[{value:"Groovy Spock",id:"groovy-spock",level:2},{value:"Database",id:"database",level:2},{value:"Reference - Apache Commons DBCP2",id:"reference---apache-commons-dbcp2",level:3},{value:"Derby",id:"derby",level:3}];function l(e){const t={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"groovy-spock",children:"Groovy Spock"}),"\n",(0,s.jsxs)(t.p,{children:["We're ",(0,s.jsx)(t.em,{children:"big"})," believers in testing our code, both for correctness, as well as to ensure that changes don't unintentionally\nbreak existing contracts unintentionally. For example, we rely heavily on the ",(0,s.jsx)(t.a,{href:"http://spockframework.org/",children:"Spock"}),"\nframework for our backend service tests, and see a lot of benefit from it's conciseness, built-in\n",(0,s.jsx)(t.a,{href:"http://spockframework.org/spock/docs/1.1-rc-2/interaction_based_testing.html",children:"mocking framework"}),", and the fact that it uses ",(0,s.jsx)(t.a,{href:"http://www.groovy-lang.org/",children:"Groovy"}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["We also strive for very high-quality code, with the belief that quality code is easier to maintain, easier to\nunderstand, and has fewer bugs. To help keep the quality bar high. For instance we have an automated style checker\n(",(0,s.jsx)(t.a,{href:"http://checkstyle.sourceforge.net/",children:"Checkstyle"}),") in our Maven-based projects with rules that ",(0,s.jsx)(t.em,{children:"should"})," catch most of the common style issues."]}),"\n",(0,s.jsx)(t.h2,{id:"database",children:"Database"}),"\n",(0,s.jsx)(t.p,{children:"Database-related tests contain 2 parts"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:"Groovy Spock unit tests on"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:n(3619).A+"",children:"Injected Query DataFetcher"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:n(8016).A+"",children:"Injected Mutation DataFetcher"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:"Live DB tests on endpoints"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["In ",(0,s.jsx)(t.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:n(8338).A+"",children:"file servlet endpoint test"}),"\nand\n",(0,s.jsx)(t.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:n(9139).A+"",children:"meta data servlet endpoint test"}),",\n",(0,s.jsx)(t.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:n(4).A+"",children:"Flyway migration"}),"\ninjects real data into a Derby in-meomroy SQL DB"]}),"\n",(0,s.jsxs)(t.li,{children:["The Derby data is injected via a shared ",(0,s.jsx)(t.a,{href:"#reference---apache-commons-dbcp2",children:"DBCP DataSource"})," declared in\n",(0,s.jsx)(t.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:n(8870).A+"",children:"application BinderFactory"})]}),"\n",(0,s.jsxs)(t.li,{children:["The application resource is set alive through ",(0,s.jsx)(t.code,{children:"JettyServerFactory"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"reference---apache-commons-dbcp2",children:"Reference - Apache Commons DBCP2"}),"\n",(0,s.jsx)(t.p,{children:"For testing Book example application, we use Derby's in-memory database facility, which resides completely in main\nmemory, not in the file system."}),"\n",(0,s.jsxs)(t.p,{children:["In addition, we use ",(0,s.jsx)(t.a,{href:"https://commons.apache.org/proper/commons-dbcp/",children:"Apache DBCP 2"})," to provide\n",(0,s.jsx)(t.a,{href:"https://gitbox.apache.org/repos/asf?p=commons-dbcp.git;a=blob_plain;f=doc/BasicDataSourceExample.java;hb=HEAD",children:"DataSource"}),"\npointing at the in-memory Derby instance."]}),"\n",(0,s.jsx)(t.h3,{id:"derby",children:"Derby"}),"\n",(0,s.jsx)(t.p,{children:"Derby was meant to be used only in tests and, hence, must be imported in test scope only"})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8870:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/files/BooksBinderFactory-6a16dbfddda4c662daee959ddeb1971d.java"},4:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/files/SQLDBResourceManager-5564cdbf154d3a2aefb3f7186860dadd.groovy"},8016:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/files/SQLMutationDataFetcherSpec-db7cec5288eb0b3c34b6e9aaf8b2613a.groovy"},3619:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/files/SQLQueryDataFetcherSpec-76b61631da0d5cdf3b9dcded13037a97.groovy"},8338:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/files/FileServletSpec-cf198c32aef461afda69df8cd5593eb0.groovy"},9139:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/files/MetaServletSpec-21091b794c55ec1fc53a9d585e0e25b1.groovy"},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>i});var s=n(6540);const a={},r=s.createContext(a);function o(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);